

/**
 * --------------------------------------------------------------------------
 *  GraphQL SDL Interface Extensions
 * --------------------------------------------------------------------------
 *
 * Interface type extensions are used to represent an interface which has
 * been extended from some original interface. For example, this might be
 * used to represent common local data on many types, or by a GraphQL
 * service which is itself an extension of another GraphQL service.
 *
 * @see https://facebook.github.io/graphql/June2018/#sec-Interface-Extensions
 */


#InterfaceTypeExtension -> {
    $interface = new \Railt\Parser\Node\TypeSystem\Extension\InterfaceTypeExtensionNode(
        $children[1]
    );

    foreach ($children as $child) {
        switch (true) {
            case $child instanceof \Railt\Parser\Node\Description:
                $interface->description = $child->value;
                break;

            case $child instanceof \Railt\Parser\Node\Generic\FieldDefinitionCollection:
                $interface->fields = $child;
                break;

            case $child instanceof \Railt\Parser\Node\Generic\DirectiveCollection:
                $interface->directives = $child;
                break;
        }
    }

    return $interface;
}
  : Description()
    ::T_EXTEND:: InterfaceTypeDefinitionExceptDescription()
  ;
